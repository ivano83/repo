<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.fivano.symusic.backend.dao.ReleaseMapper">
  <resultMap id="BaseResultMap" type="it.fivano.symusic.backend.model.Release">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    <id column="id_release" jdbcType="BIGINT" property="idRelease" />
    <result column="release_name" jdbcType="VARCHAR" property="releaseName" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="song_name" jdbcType="VARCHAR" property="songName" />
    <result column="years" jdbcType="CHAR" property="years" />
    <result column="crew" jdbcType="VARCHAR" property="crew" />
    <result column="release_date" jdbcType="DATE" property="releaseDate" />
    <result column="id_genre" jdbcType="INTEGER" property="idGenre" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    id_release, release_name, author, song_name, years, crew, release_date, id_genre
  </sql>
  <select id="selectByExample" parameterType="it.fivano.symusic.backend.model.ReleaseExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from symusic.release
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from symusic.release
    where id_release = #{idRelease,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    delete from symusic.release
    where id_release = #{idRelease,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="it.fivano.symusic.backend.model.ReleaseExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    delete from symusic.release
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="it.fivano.symusic.backend.model.Release">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    <selectKey keyProperty="idRelease" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into symusic.release (release_name, author, song_name, 
      years, crew, release_date, 
      id_genre)
    values (#{releaseName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{songName,jdbcType=VARCHAR}, 
      #{years,jdbcType=CHAR}, #{crew,jdbcType=VARCHAR}, #{releaseDate,jdbcType=DATE}, 
      #{idGenre,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="it.fivano.symusic.backend.model.Release">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    <selectKey keyProperty="idRelease" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into symusic.release
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="releaseName != null">
        release_name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="songName != null">
        song_name,
      </if>
      <if test="years != null">
        years,
      </if>
      <if test="crew != null">
        crew,
      </if>
      <if test="releaseDate != null">
        release_date,
      </if>
      <if test="idGenre != null">
        id_genre,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="releaseName != null">
        #{releaseName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="songName != null">
        #{songName,jdbcType=VARCHAR},
      </if>
      <if test="years != null">
        #{years,jdbcType=CHAR},
      </if>
      <if test="crew != null">
        #{crew,jdbcType=VARCHAR},
      </if>
      <if test="releaseDate != null">
        #{releaseDate,jdbcType=DATE},
      </if>
      <if test="idGenre != null">
        #{idGenre,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="it.fivano.symusic.backend.model.ReleaseExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    select count(*) from symusic.release
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    update symusic.release
    <set>
      <if test="record.idRelease != null">
        id_release = #{record.idRelease,jdbcType=BIGINT},
      </if>
      <if test="record.releaseName != null">
        release_name = #{record.releaseName,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.songName != null">
        song_name = #{record.songName,jdbcType=VARCHAR},
      </if>
      <if test="record.years != null">
        years = #{record.years,jdbcType=CHAR},
      </if>
      <if test="record.crew != null">
        crew = #{record.crew,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseDate != null">
        release_date = #{record.releaseDate,jdbcType=DATE},
      </if>
      <if test="record.idGenre != null">
        id_genre = #{record.idGenre,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    update symusic.release
    set id_release = #{record.idRelease,jdbcType=BIGINT},
      release_name = #{record.releaseName,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      song_name = #{record.songName,jdbcType=VARCHAR},
      years = #{record.years,jdbcType=CHAR},
      crew = #{record.crew,jdbcType=VARCHAR},
      release_date = #{record.releaseDate,jdbcType=DATE},
      id_genre = #{record.idGenre,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="it.fivano.symusic.backend.model.Release">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    update symusic.release
    <set>
      <if test="releaseName != null">
        release_name = #{releaseName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="songName != null">
        song_name = #{songName,jdbcType=VARCHAR},
      </if>
      <if test="years != null">
        years = #{years,jdbcType=CHAR},
      </if>
      <if test="crew != null">
        crew = #{crew,jdbcType=VARCHAR},
      </if>
      <if test="releaseDate != null">
        release_date = #{releaseDate,jdbcType=DATE},
      </if>
      <if test="idGenre != null">
        id_genre = #{idGenre,jdbcType=INTEGER},
      </if>
    </set>
    where id_release = #{idRelease,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="it.fivano.symusic.backend.model.Release">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 09 23:38:11 CEST 2013.
    -->
    update symusic.release
    set release_name = #{releaseName,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      song_name = #{songName,jdbcType=VARCHAR},
      years = #{years,jdbcType=CHAR},
      crew = #{crew,jdbcType=VARCHAR},
      release_date = #{releaseDate,jdbcType=DATE},
      id_genre = #{idGenre,jdbcType=INTEGER}
    where id_release = #{idRelease,jdbcType=BIGINT}
  </update>
</mapper>