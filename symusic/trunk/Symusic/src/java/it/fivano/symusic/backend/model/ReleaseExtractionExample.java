package it.fivano.symusic.backend.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ReleaseExtractionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    public ReleaseExtractionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdReleaseIsNull() {
            addCriterion("id_release is null");
            return (Criteria) this;
        }

        public Criteria andIdReleaseIsNotNull() {
            addCriterion("id_release is not null");
            return (Criteria) this;
        }

        public Criteria andIdReleaseEqualTo(Long value) {
            addCriterion("id_release =", value, "idRelease");
            return (Criteria) this;
        }

        public Criteria andIdReleaseNotEqualTo(Long value) {
            addCriterion("id_release <>", value, "idRelease");
            return (Criteria) this;
        }

        public Criteria andIdReleaseGreaterThan(Long value) {
            addCriterion("id_release >", value, "idRelease");
            return (Criteria) this;
        }

        public Criteria andIdReleaseGreaterThanOrEqualTo(Long value) {
            addCriterion("id_release >=", value, "idRelease");
            return (Criteria) this;
        }

        public Criteria andIdReleaseLessThan(Long value) {
            addCriterion("id_release <", value, "idRelease");
            return (Criteria) this;
        }

        public Criteria andIdReleaseLessThanOrEqualTo(Long value) {
            addCriterion("id_release <=", value, "idRelease");
            return (Criteria) this;
        }

        public Criteria andIdReleaseIn(List<Long> values) {
            addCriterion("id_release in", values, "idRelease");
            return (Criteria) this;
        }

        public Criteria andIdReleaseNotIn(List<Long> values) {
            addCriterion("id_release not in", values, "idRelease");
            return (Criteria) this;
        }

        public Criteria andIdReleaseBetween(Long value1, Long value2) {
            addCriterion("id_release between", value1, value2, "idRelease");
            return (Criteria) this;
        }

        public Criteria andIdReleaseNotBetween(Long value1, Long value2) {
            addCriterion("id_release not between", value1, value2, "idRelease");
            return (Criteria) this;
        }

        public Criteria andYoutubeIsNull() {
            addCriterion("youtube is null");
            return (Criteria) this;
        }

        public Criteria andYoutubeIsNotNull() {
            addCriterion("youtube is not null");
            return (Criteria) this;
        }

        public Criteria andYoutubeEqualTo(Boolean value) {
            addCriterion("youtube =", value, "youtube");
            return (Criteria) this;
        }

        public Criteria andYoutubeNotEqualTo(Boolean value) {
            addCriterion("youtube <>", value, "youtube");
            return (Criteria) this;
        }

        public Criteria andYoutubeGreaterThan(Boolean value) {
            addCriterion("youtube >", value, "youtube");
            return (Criteria) this;
        }

        public Criteria andYoutubeGreaterThanOrEqualTo(Boolean value) {
            addCriterion("youtube >=", value, "youtube");
            return (Criteria) this;
        }

        public Criteria andYoutubeLessThan(Boolean value) {
            addCriterion("youtube <", value, "youtube");
            return (Criteria) this;
        }

        public Criteria andYoutubeLessThanOrEqualTo(Boolean value) {
            addCriterion("youtube <=", value, "youtube");
            return (Criteria) this;
        }

        public Criteria andYoutubeIn(List<Boolean> values) {
            addCriterion("youtube in", values, "youtube");
            return (Criteria) this;
        }

        public Criteria andYoutubeNotIn(List<Boolean> values) {
            addCriterion("youtube not in", values, "youtube");
            return (Criteria) this;
        }

        public Criteria andYoutubeBetween(Boolean value1, Boolean value2) {
            addCriterion("youtube between", value1, value2, "youtube");
            return (Criteria) this;
        }

        public Criteria andYoutubeNotBetween(Boolean value1, Boolean value2) {
            addCriterion("youtube not between", value1, value2, "youtube");
            return (Criteria) this;
        }

        public Criteria andYoutubeDateExtractionIsNull() {
            addCriterion("youtube_date_extraction is null");
            return (Criteria) this;
        }

        public Criteria andYoutubeDateExtractionIsNotNull() {
            addCriterion("youtube_date_extraction is not null");
            return (Criteria) this;
        }

        public Criteria andYoutubeDateExtractionEqualTo(Date value) {
            addCriterion("youtube_date_extraction =", value, "youtubeDateExtraction");
            return (Criteria) this;
        }

        public Criteria andYoutubeDateExtractionNotEqualTo(Date value) {
            addCriterion("youtube_date_extraction <>", value, "youtubeDateExtraction");
            return (Criteria) this;
        }

        public Criteria andYoutubeDateExtractionGreaterThan(Date value) {
            addCriterion("youtube_date_extraction >", value, "youtubeDateExtraction");
            return (Criteria) this;
        }

        public Criteria andYoutubeDateExtractionGreaterThanOrEqualTo(Date value) {
            addCriterion("youtube_date_extraction >=", value, "youtubeDateExtraction");
            return (Criteria) this;
        }

        public Criteria andYoutubeDateExtractionLessThan(Date value) {
            addCriterion("youtube_date_extraction <", value, "youtubeDateExtraction");
            return (Criteria) this;
        }

        public Criteria andYoutubeDateExtractionLessThanOrEqualTo(Date value) {
            addCriterion("youtube_date_extraction <=", value, "youtubeDateExtraction");
            return (Criteria) this;
        }

        public Criteria andYoutubeDateExtractionIn(List<Date> values) {
            addCriterion("youtube_date_extraction in", values, "youtubeDateExtraction");
            return (Criteria) this;
        }

        public Criteria andYoutubeDateExtractionNotIn(List<Date> values) {
            addCriterion("youtube_date_extraction not in", values, "youtubeDateExtraction");
            return (Criteria) this;
        }

        public Criteria andYoutubeDateExtractionBetween(Date value1, Date value2) {
            addCriterion("youtube_date_extraction between", value1, value2, "youtubeDateExtraction");
            return (Criteria) this;
        }

        public Criteria andYoutubeDateExtractionNotBetween(Date value1, Date value2) {
            addCriterion("youtube_date_extraction not between", value1, value2, "youtubeDateExtraction");
            return (Criteria) this;
        }

        public Criteria andScenelogIsNull() {
            addCriterion("scenelog is null");
            return (Criteria) this;
        }

        public Criteria andScenelogIsNotNull() {
            addCriterion("scenelog is not null");
            return (Criteria) this;
        }

        public Criteria andScenelogEqualTo(Boolean value) {
            addCriterion("scenelog =", value, "scenelog");
            return (Criteria) this;
        }

        public Criteria andScenelogNotEqualTo(Boolean value) {
            addCriterion("scenelog <>", value, "scenelog");
            return (Criteria) this;
        }

        public Criteria andScenelogGreaterThan(Boolean value) {
            addCriterion("scenelog >", value, "scenelog");
            return (Criteria) this;
        }

        public Criteria andScenelogGreaterThanOrEqualTo(Boolean value) {
            addCriterion("scenelog >=", value, "scenelog");
            return (Criteria) this;
        }

        public Criteria andScenelogLessThan(Boolean value) {
            addCriterion("scenelog <", value, "scenelog");
            return (Criteria) this;
        }

        public Criteria andScenelogLessThanOrEqualTo(Boolean value) {
            addCriterion("scenelog <=", value, "scenelog");
            return (Criteria) this;
        }

        public Criteria andScenelogIn(List<Boolean> values) {
            addCriterion("scenelog in", values, "scenelog");
            return (Criteria) this;
        }

        public Criteria andScenelogNotIn(List<Boolean> values) {
            addCriterion("scenelog not in", values, "scenelog");
            return (Criteria) this;
        }

        public Criteria andScenelogBetween(Boolean value1, Boolean value2) {
            addCriterion("scenelog between", value1, value2, "scenelog");
            return (Criteria) this;
        }

        public Criteria andScenelogNotBetween(Boolean value1, Boolean value2) {
            addCriterion("scenelog not between", value1, value2, "scenelog");
            return (Criteria) this;
        }

        public Criteria andScenelogDateExtractionIsNull() {
            addCriterion("scenelog_date_extraction is null");
            return (Criteria) this;
        }

        public Criteria andScenelogDateExtractionIsNotNull() {
            addCriterion("scenelog_date_extraction is not null");
            return (Criteria) this;
        }

        public Criteria andScenelogDateExtractionEqualTo(Date value) {
            addCriterion("scenelog_date_extraction =", value, "scenelogDateExtraction");
            return (Criteria) this;
        }

        public Criteria andScenelogDateExtractionNotEqualTo(Date value) {
            addCriterion("scenelog_date_extraction <>", value, "scenelogDateExtraction");
            return (Criteria) this;
        }

        public Criteria andScenelogDateExtractionGreaterThan(Date value) {
            addCriterion("scenelog_date_extraction >", value, "scenelogDateExtraction");
            return (Criteria) this;
        }

        public Criteria andScenelogDateExtractionGreaterThanOrEqualTo(Date value) {
            addCriterion("scenelog_date_extraction >=", value, "scenelogDateExtraction");
            return (Criteria) this;
        }

        public Criteria andScenelogDateExtractionLessThan(Date value) {
            addCriterion("scenelog_date_extraction <", value, "scenelogDateExtraction");
            return (Criteria) this;
        }

        public Criteria andScenelogDateExtractionLessThanOrEqualTo(Date value) {
            addCriterion("scenelog_date_extraction <=", value, "scenelogDateExtraction");
            return (Criteria) this;
        }

        public Criteria andScenelogDateExtractionIn(List<Date> values) {
            addCriterion("scenelog_date_extraction in", values, "scenelogDateExtraction");
            return (Criteria) this;
        }

        public Criteria andScenelogDateExtractionNotIn(List<Date> values) {
            addCriterion("scenelog_date_extraction not in", values, "scenelogDateExtraction");
            return (Criteria) this;
        }

        public Criteria andScenelogDateExtractionBetween(Date value1, Date value2) {
            addCriterion("scenelog_date_extraction between", value1, value2, "scenelogDateExtraction");
            return (Criteria) this;
        }

        public Criteria andScenelogDateExtractionNotBetween(Date value1, Date value2) {
            addCriterion("scenelog_date_extraction not between", value1, value2, "scenelogDateExtraction");
            return (Criteria) this;
        }

        public Criteria andBeatportIsNull() {
            addCriterion("beatport is null");
            return (Criteria) this;
        }

        public Criteria andBeatportIsNotNull() {
            addCriterion("beatport is not null");
            return (Criteria) this;
        }

        public Criteria andBeatportEqualTo(Boolean value) {
            addCriterion("beatport =", value, "beatport");
            return (Criteria) this;
        }

        public Criteria andBeatportNotEqualTo(Boolean value) {
            addCriterion("beatport <>", value, "beatport");
            return (Criteria) this;
        }

        public Criteria andBeatportGreaterThan(Boolean value) {
            addCriterion("beatport >", value, "beatport");
            return (Criteria) this;
        }

        public Criteria andBeatportGreaterThanOrEqualTo(Boolean value) {
            addCriterion("beatport >=", value, "beatport");
            return (Criteria) this;
        }

        public Criteria andBeatportLessThan(Boolean value) {
            addCriterion("beatport <", value, "beatport");
            return (Criteria) this;
        }

        public Criteria andBeatportLessThanOrEqualTo(Boolean value) {
            addCriterion("beatport <=", value, "beatport");
            return (Criteria) this;
        }

        public Criteria andBeatportIn(List<Boolean> values) {
            addCriterion("beatport in", values, "beatport");
            return (Criteria) this;
        }

        public Criteria andBeatportNotIn(List<Boolean> values) {
            addCriterion("beatport not in", values, "beatport");
            return (Criteria) this;
        }

        public Criteria andBeatportBetween(Boolean value1, Boolean value2) {
            addCriterion("beatport between", value1, value2, "beatport");
            return (Criteria) this;
        }

        public Criteria andBeatportNotBetween(Boolean value1, Boolean value2) {
            addCriterion("beatport not between", value1, value2, "beatport");
            return (Criteria) this;
        }

        public Criteria andBeatportDateExtractionIsNull() {
            addCriterion("beatport_date_extraction is null");
            return (Criteria) this;
        }

        public Criteria andBeatportDateExtractionIsNotNull() {
            addCriterion("beatport_date_extraction is not null");
            return (Criteria) this;
        }

        public Criteria andBeatportDateExtractionEqualTo(Date value) {
            addCriterion("beatport_date_extraction =", value, "beatportDateExtraction");
            return (Criteria) this;
        }

        public Criteria andBeatportDateExtractionNotEqualTo(Date value) {
            addCriterion("beatport_date_extraction <>", value, "beatportDateExtraction");
            return (Criteria) this;
        }

        public Criteria andBeatportDateExtractionGreaterThan(Date value) {
            addCriterion("beatport_date_extraction >", value, "beatportDateExtraction");
            return (Criteria) this;
        }

        public Criteria andBeatportDateExtractionGreaterThanOrEqualTo(Date value) {
            addCriterion("beatport_date_extraction >=", value, "beatportDateExtraction");
            return (Criteria) this;
        }

        public Criteria andBeatportDateExtractionLessThan(Date value) {
            addCriterion("beatport_date_extraction <", value, "beatportDateExtraction");
            return (Criteria) this;
        }

        public Criteria andBeatportDateExtractionLessThanOrEqualTo(Date value) {
            addCriterion("beatport_date_extraction <=", value, "beatportDateExtraction");
            return (Criteria) this;
        }

        public Criteria andBeatportDateExtractionIn(List<Date> values) {
            addCriterion("beatport_date_extraction in", values, "beatportDateExtraction");
            return (Criteria) this;
        }

        public Criteria andBeatportDateExtractionNotIn(List<Date> values) {
            addCriterion("beatport_date_extraction not in", values, "beatportDateExtraction");
            return (Criteria) this;
        }

        public Criteria andBeatportDateExtractionBetween(Date value1, Date value2) {
            addCriterion("beatport_date_extraction between", value1, value2, "beatportDateExtraction");
            return (Criteria) this;
        }

        public Criteria andBeatportDateExtractionNotBetween(Date value1, Date value2) {
            addCriterion("beatport_date_extraction not between", value1, value2, "beatportDateExtraction");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated do_not_delete_during_merge Wed Oct 09 21:16:21 CEST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table symusic..release_extraction
     *
     * @mbggenerated Wed Oct 09 21:16:21 CEST 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}